// Apply the java-library plugin to add support for Java Library
plugins {
    id 'java'
    id 'idea'
    id 'java-library'
    id 'jacoco'
    id 'com.github.sherter.google-java-format' version '0.8'
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '4.1.1'
}
println("Notice: current gradle version is " + gradle.gradleVersion)
// Additional attribute definition
ext {
    // jackson version
    javaSDKVersion="2.9.0-SNAPSHOT"
    solcJVersion = "0.4.25.2"
    //solcJVersion = "0.5.2.2"
    //solcJVersion = "0.6.10.2"
    guavaVersion = "29.0-jre"
    commonsCollections4Version = "4.4"
    springVersion = "4.3.27.RELEASE"
}

archivesBaseName = 'java-sdk-demo'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://oss.sonatype.org/service/local/staging/deploy/maven2"}
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    integrationTest {
        copy {
            from file('src/test/resources/amop/')
            into 'conf/amop'
        }
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

googleJavaFormat {
    options style: 'AOSP'
    source = sourceSets*.allJava
    include '**/*.java'
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 30, 'seconds'
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}


List spring = [
        "org.springframework:spring-core:$springVersion",
        "org.springframework:spring-beans:$springVersion",
        "org.springframework:spring-context:$springVersion",
        "org.springframework:spring-tx:$springVersion",
]

def log4j_version="2.17.1"
List logger = [
        "org.apache.logging.log4j:log4j-api:$log4j_version",
        "org.apache.logging.log4j:log4j-core:$log4j_version",
        "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",
        "org.apache.logging.log4j:log4j-web:$log4j_version"
]

dependencies {
    compile ("org.fisco-bcos.java-sdk:fisco-bcos-java-sdk:${javaSDKVersion}")
    compile ("org.fisco-bcos:solcJ:${solcJVersion}")
    compile ("com.google.guava:guava:${guavaVersion}")
    compile ("org.apache.commons:commons-collections4:${commonsCollections4Version}")
    compile spring
    compile logger
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 30, 'seconds'
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

jar {
    // destinationDir file('dist/apps')
    // archiveName project.name + '-' + project.version + '.jar'
    exclude '**/*.xml'
    exclude '**/*.properties'
    doLast {
        copy {
            from destinationDir
            into 'dist/apps'
        }
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
        copy {
            from file('src/test/resources/')
            into 'dist/conf'
        }
    }
}
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
check.dependsOn jacocoTestReport
